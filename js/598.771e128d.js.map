{"version":3,"file":"js/598.771e128d.js","mappings":"YAAA,MAAMA,EAAW,cACXC,EAAc,WAEpBC,eAAeC,IACb,IAAIC,EAAM,GAeV,aAdMC,MAAML,EAAU,CACpBM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAM,CAAC,IAENC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACLR,EAAMQ,CAAG,IAEVC,OAAOC,IACNC,QAAQD,MAAM,uBAAwBA,EAAM,IAEzCV,CACT,CAEAY,UAAaC,IACXZ,MAAMJ,EAAa,CACjBK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMU,KAAKC,UAAUF,EAAMG,OAC3B,EAGJC,aAAY,KACVlB,EAAO,OAAOM,MAAMG,IAClBU,YAAYV,EAAI,GAChB,GACD,I","sources":["webpack://tmp/./src/components/Utils/worker.js"],"sourcesContent":["const proxyUrl = '/srv/STAALL';\nconst proxyUrlCMD = '/srv/CMD';\n\nasync function getSta() {\n  let sta = '';\n  await fetch(proxyUrl, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: {},\n  })\n    .then((response) => response.json())\n    .then((res) => {\n      sta = res;\n    })\n    .catch((error) => {\n      console.error('Error fetching data:', error);\n    });\n  return sta;\n}\n\nonmessage = (event) => {\n  fetch(proxyUrlCMD, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(event.data),\n  });\n};\n\nsetInterval(() => {\n  getSta('AAA').then((res) => {\n    postMessage(res);\n  });\n}, 1000);\n"],"names":["proxyUrl","proxyUrlCMD","async","getSta","sta","fetch","method","headers","body","then","response","json","res","catch","error","console","onmessage","event","JSON","stringify","data","setInterval","postMessage"],"sourceRoot":""}