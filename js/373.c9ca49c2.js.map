{"version":3,"file":"js/373.c9ca49c2.js","mappings":"6LAGA,IAAIA,EAAK,EAKT,SAASC,IAEP,OADAD,GAAM,EACE,WAAUA,GACpB,CAKA,MAAME,EAAQ,CAIZC,aAAaC,EAAAA,EAAAA,IAAI,MACjBC,YAAYD,EAAAA,EAAAA,KAAI,GAChBE,YAAYF,EAAAA,EAAAA,KAAI,IAGH,SAASG,IACtB,MAAM,YAAEJ,EAAW,WAAEE,EAAU,WAAEC,GAAeJ,GAE1C,SACJM,EAAQ,uBAAEC,EAAsB,mBAAEC,EAAkB,WAAEC,IACpDC,EAAAA,EAAAA,MAKJ,SAASC,IACPP,EAAWQ,OAAQ,EACnBT,EAAWS,OAAQ,EACnBX,EAAYW,MAAQ,KACpBC,SAASC,oBAAoB,OAAQH,EACvC,CAMA,SAASI,EAAYC,EAAOC,GACtBD,EAAME,eACRF,EAAME,aAAaC,QAAQ,sBAAuBF,GAClDD,EAAME,aAAaC,QAAQ,OAAQH,EAAME,aAAaE,gBAIxDnB,EAAYW,MAAQK,EACpBb,EAAWQ,OAAQ,EAEnBC,SAASQ,iBAAiB,OAAQV,EACpC,CAEA,SAASW,EAAWN,GAClBA,EAAMO,iBAEFtB,EAAYW,QACdT,EAAWS,OAAQ,EAEfI,EAAME,cAERF,EAAME,aAAaC,QAAQ,OAAQH,EAAME,aAAaM,YAG5D,CAEA,SAASC,IACPtB,EAAWS,OAAQ,CACrB,CAOA,SAASc,EAAOV,GACd,MAAMW,EAAWpB,EAAuB,CACtCqB,EAAGZ,EAAMa,QACTC,EAAGd,EAAMe,UAGLC,EAASjC,IAETkC,EAAU,CACdnC,GAAIkC,EACJf,KAAMhB,EAAYW,MAClBe,WACAO,MAAQ,IAAGF,OAOP,IAAEG,GAAQ3B,GAAmB,KACjCC,EAAWuB,GAASI,IAAI,CACtBT,SAAU,CACRC,EAAGQ,EAAKT,SAASC,EAAIQ,EAAKC,WAAWC,MAAQ,EAC7CR,EAAGM,EAAKT,SAASG,EAAIM,EAAKC,WAAWE,OAAS,OAIlDJ,GAAK,IAGP7B,EAAS2B,EACX,CAEA,OAlFAO,EAAAA,EAAAA,IAAMpC,GAAaqC,IACjB5B,SAAS6B,KAAKC,MAAMC,WAAaH,EAAW,OAAS,EAAE,IAiFlD,CACLxC,cACAE,aACAC,aACAW,cACAU,cACAH,aACAI,SAEJ,C,4ICxHA,MAAM,YAAEX,GAAgBV,I,udCAxB,MAAMwC,EAAc,EAEpB,Q,UCFA,MAAMC,EAAa,CAAEH,MAAO,CAAC,OAAS,OAAO,MAAQ,SAIrD,OAA4BI,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,qBACRC,KAAAA,CAAMC,GAGR,MAAO,CAACC,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOR,EAAY,EAC3DS,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAa,CAC/BC,KAAM,EACNC,IAAK,GACL,gBAAiB,WAChB,CACDC,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBC,EAAAA,EAAAA,IAAYX,EAAKY,OAAQ,cAE3BC,EAAG,MAIT,ICvBA,MAAM,EAAc,EAEpB,Q,8BCEA,MAAM,UAAEC,EAAS,SAAEC,IAAaxD,EAAAA,EAAAA,OAE1B,WACJY,EAAU,OAAEI,EAAM,YAAED,EAAW,WAAEtB,GAC/BE,IAEE8D,GAAQjE,EAAAA,EAAAA,IAAI,I,OAElB+D,EAAUC,G,gbCVV,MAAM,EAAc,EAEpB,O","sources":["webpack://tmp/./src/components/Flow/useDnD.js","webpack://tmp/./src/components/Flow/SideBar.vue","webpack://tmp/./src/components/Flow/SideBar.vue?d972","webpack://tmp/./src/components/Flow/DropzoneBackground.vue?6dfc","webpack://tmp/./src/components/Flow/DropzoneBackground.vue","webpack://tmp/./src/components/Flow/DragDrop.vue","webpack://tmp/./src/components/Flow/DragDrop.vue?c2ab"],"sourcesContent":["import { useVueFlow } from '@vue-flow/core';\nimport { ref, watch } from 'vue';\n\nlet id = 0;\n\n/**\n * @returns {string} - A unique id.\n */\nfunction getId() {\n  id += 1;\n  return `dndnode_${id}`;\n}\n\n/**\n * @type {{draggedType: Ref<string|null>, isDragOver: Ref<boolean>, isDragging: Ref<boolean>}}\n */\nconst state = {\n  /**\n   * The type of the node being dragged.\n   */\n  draggedType: ref(null),\n  isDragOver: ref(false),\n  isDragging: ref(false),\n};\n\nexport default function useDragAndDrop() {\n  const { draggedType, isDragOver, isDragging } = state;\n\n  const {\n    addNodes, screenToFlowCoordinate, onNodesInitialized, updateNode,\n  } = useVueFlow();\n\n  watch(isDragging, (dragging) => {\n    document.body.style.userSelect = dragging ? 'none' : '';\n  });\n  function onDragEnd() {\n    isDragging.value = false;\n    isDragOver.value = false;\n    draggedType.value = null;\n    document.removeEventListener('drop', onDragEnd);\n  }\n  /**\n   * Handles the drag over event.\n   *\n   * @param {DragEvent} event\n   */\n  function onDragStart(event, type) {\n    if (event.dataTransfer) {\n      event.dataTransfer.setData('application/vueflow', type);\n      event.dataTransfer.setData('move', event.dataTransfer.effectAllowed); // firefox needs this = 'move';\n      // event.dataTransfer.effectAllowed = 'move';\n    }\n\n    draggedType.value = type;\n    isDragging.value = true;\n\n    document.addEventListener('drop', onDragEnd);\n  }\n\n  function onDragOver(event) {\n    event.preventDefault();\n\n    if (draggedType.value) {\n      isDragOver.value = true;\n\n      if (event.dataTransfer) {\n        // event.dataTransfer.dropEffect = 'move';\n        event.dataTransfer.setData('move', event.dataTransfer.dropEffect);\n      }\n    }\n  }\n\n  function onDragLeave() {\n    isDragOver.value = false;\n  }\n\n  /**\n   * Handles the drop event.\n   *\n   * @param {DragEvent} event\n   */\n  function onDrop(event) {\n    const position = screenToFlowCoordinate({\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    const nodeId = getId();\n\n    const newNode = {\n      id: nodeId,\n      type: draggedType.value,\n      position,\n      label: `[${nodeId}]`,\n    };\n\n    /**\n     * Align node position after drop, so it's centered to the mouse\n     *\n     */\n    const { off } = onNodesInitialized(() => {\n      updateNode(nodeId, (node) => ({\n        position: {\n          x: node.position.x - node.dimensions.width / 2,\n          y: node.position.y - node.dimensions.height / 2,\n        },\n      }));\n\n      off();\n    });\n\n    addNodes(newNode);\n  }\n\n  return {\n    draggedType,\n    isDragOver,\n    isDragging,\n    onDragStart,\n    onDragLeave,\n    onDragOver,\n    onDrop,\n  };\n}\n","<script setup>\nimport useDragAndDrop from './useDnD';\n\nconst { onDragStart } = useDragAndDrop();\n</script>\n\n<template>\n  <aside>\n    <div class=\"description\">You can drag these nodes to the pane.</div>\n\n    <div class=\"nodes\">\n      <div class=\"vue-flow__node-input\" :draggable=\"true\" @dragstart=\"onDragStart($event, 'input')\">\n        Input Node\n      </div>\n      <div\n        class=\"vue-flow__node-default\"\n        :draggable=\"true\"\n        @dragstart=\"onDragStart($event, 'default')\"\n      >\n        Default Node\n      </div>\n      <div\n        class=\"vue-flow__node-output\"\n        :draggable=\"true\"\n        @dragstart=\"onDragStart($event, 'output')\"\n      >\n        Output Node\n      </div>\n    </div>\n  </aside>\n</template>\n","import script from \"./SideBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SideBar.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderSlot as _renderSlot, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { style: {\"height\":\"100%\",\"width\":\"100%\"} }\n\nimport { Background } from '@vue-flow/background';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DropzoneBackground',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_unref(Background), {\n      size: 2,\n      gap: 20,\n      \"pattern-color\": \"#BDBDBD\"\n    }, {\n      default: _withCtx(() => [\n        _renderSlot(_ctx.$slots, \"default\")\n      ]),\n      _: 3\n    })\n  ]))\n}\n}\n\n})","import script from \"./DropzoneBackground.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./DropzoneBackground.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref } from 'vue';\nimport { VueFlow, useVueFlow } from '@vue-flow/core';\nimport Sidebar from './SideBar.vue';\nimport DropzoneBackground from './DropzoneBackground.vue';\nimport useDragAndDrop from './useDnD';\n\nconst { onConnect, addEdges } = useVueFlow();\n\nconst {\n  onDragOver, onDrop, onDragLeave, isDragOver,\n} = useDragAndDrop();\n\nconst nodes = ref([]);\n\nonConnect(addEdges);\n</script>\n\n<template>\n  <div class=\"dndflow\" @drop=\"onDrop\">\n    <VueFlow :nodes=\"nodes\" @dragover=\"onDragOver\" @dragleave=\"onDragLeave\">\n      <DropzoneBackground\n        :style=\"{\n          backgroundColor: isDragOver ? '#e7f3ff' : 'transparent',\n          transition: 'background-color 0.2s ease',\n        }\"\n      />\n    </VueFlow>\n\n    <Sidebar />\n  </div>\n</template>\n\n<style>\n@import \"https://cdn.jsdelivr.net/npm/@vue-flow/core@1.33.6/dist/style.css\";\n@import \"https://cdn.jsdelivr.net/npm/@vue-flow/core@1.33.6/dist/theme-default.css\";\n@import \"https://cdn.jsdelivr.net/npm/@vue-flow/controls@latest/dist/style.css\";\n@import \"https://cdn.jsdelivr.net/npm/@vue-flow/minimap@latest/dist/style.css\";\n@import \"https://cdn.jsdelivr.net/npm/@vue-flow/node-resizer@latest/dist/style.css\";\n\nhtml,\nbody,\n#app {\n  margin: 0;\n  height: 100%;\n}\n\n#app {\n  text-transform: uppercase;\n  font-family: \"JetBrains Mono\", monospace;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n.vue-flow__minimap {\n  transform: scale(75%);\n  transform-origin: bottom right;\n}\n\n.dndflow {\n  flex-direction: column;\n  display: flex;\n  height: 100%;\n}\n.dndflow aside {\n  color: #fff;\n  font-weight: 700;\n  border-right: 1px solid #eee;\n  padding: 15px 10px;\n  font-size: 12px;\n  background: rgba(16, 185, 129, 0.75);\n  -webkit-box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.3);\n  box-shadow: 0 5px 10px #0000004d;\n}\n.dndflow aside .nodes > * {\n  margin-bottom: 10px;\n  cursor: grab;\n  font-weight: 500;\n  -webkit-box-shadow: 5px 5px 10px 2px rgba(0, 0, 0, 0.25);\n  box-shadow: 5px 5px 10px 2px #00000040;\n}\n.dndflow aside .description {\n  margin-bottom: 10px;\n}\n.dndflow .vue-flow-wrapper {\n  flex-grow: 1;\n  height: 100%;\n}\n@media screen and (min-width: 640px) {\n  .dndflow {\n    flex-direction: row;\n  }\n  .dndflow aside {\n    min-width: 25%;\n  }\n}\n@media screen and (max-width: 639px) {\n  .dndflow aside .nodes {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n  }\n}\n</style>\n","import script from \"./DragDrop.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DragDrop.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DragDrop.vue?vue&type=style&index=0&id=028fcb60&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["id","getId","state","draggedType","ref","isDragOver","isDragging","useDragAndDrop","addNodes","screenToFlowCoordinate","onNodesInitialized","updateNode","useVueFlow","onDragEnd","value","document","removeEventListener","onDragStart","event","type","dataTransfer","setData","effectAllowed","addEventListener","onDragOver","preventDefault","dropEffect","onDragLeave","onDrop","position","x","clientX","y","clientY","nodeId","newNode","label","off","node","dimensions","width","height","watch","dragging","body","style","userSelect","__exports__","_hoisted_1","_defineComponent","__name","setup","__props","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","Background","size","gap","default","_withCtx","_renderSlot","$slots","_","onConnect","addEdges","nodes"],"sourceRoot":""}